import React, { memo, useMemo } from 'react';
import { usePageContext } from 'helpers/context/PageContext';
import { pluralizeAds, pluralizeOffer } from 'constants/pluralizeConstants';
import { useVehiclesMeta } from 'store/catalog/vehicles/meta';
import { useHomeState } from 'store/home';
import { HomeTab } from 'types/Home';
import { Meta } from 'components/Meta';
import { useInstalmentMeta } from 'store/instalment/vehicles/meta';
import { useCity } from 'store/city';
import { getFormattedCity } from 'helpers/getFormattedCity';

export const MetaContainer = memo(() => {
  const { canonical, isCanonical } = usePageContext();
  const { current } = useCity();
  const {
    meta: { count: carsCount = 0, minPrice = 0 },
  } = useVehiclesMeta();
  const {
    meta: { count: offersCount, minPrice: installmentMonthlyPayment },
  } = useInstalmentMeta();
  const { activeTab } = useHomeState();
  const metaTags = useMemo(() => {
    if (activeTab === HomeTab.BUY) {
      const pluralizeCount = `${carsCount} ${pluralizeAds(carsCount)}`;
      return {
        title: `–ë–∞–Ω–∫–∞–≤—Ç–æ - –∫—É–ø–∏—Ç—å –∞–≤—Ç–æ ${getFormattedCity(
          current,
        )} –æ–Ω–ª–∞–π–Ω üöó –¶–µ–Ω–∞ –æ—Ç ${minPrice} —Ä—É–± - –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å –ø—Ä–æ–¥–∞–∂–∏ –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π –æ—Ç –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–≥–æ –¥–∏–ª–µ—Ä–∞`,
        description: `–ö—É–ø–∏—Ç—å –∞–≤—Ç–æ ${getFormattedCity(
          current,
        )} –Ω–∞ #–±–∞–Ω–∫–∞–≤—Ç–æ üöó –¶–µ–Ω–∞ –æ—Ç ${minPrice} —Ä—É–±. –ü—Ä–æ–¥–∞–∂–∞ –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π –æ—Ç –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–≥–æ –¥–∏–ª–µ—Ä–∞ ‚Äì –±–æ–ª–µ–µ ${pluralizeCount}! –ó–∞—Ö–æ–¥–∏—Ç–µ –∏ –≤—ã–±–∏—Ä–∞–π—Ç–µ!`,
      };
    }
    if (activeTab === HomeTab.SELL) {
      return {
        title: `–†–∞–∑–º–µ—Å—Ç–∏—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ –æ –ø—Ä–æ–¥–∞–∂–µ –∞–≤—Ç–æ ${getFormattedCity(current)} - –ø—Ä–æ–¥–∞—Ç—å –∞–≤—Ç–æ–º–æ–±–∏–ª—å –Ω–∞ bankauto.ru`,
        description: `–í—ã–≥–æ–¥–Ω–æ –∏ –±—ã—Å—Ç—Ä–æ –ø—Ä–æ–¥–∞—Ç—å –∞–≤—Ç–æ–º–æ–±–∏–ª—å –Ω–∞ #–±–∞–Ω–∫–∞–≤—Ç–æ, –ª–µ–≥–∫–æ —Ä–∞–∑–º–µ—Å—Ç–∏—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ –æ –ø—Ä–æ–¥–∞–∂–µ –∞–≤—Ç–æ ${getFormattedCity(
          current,
        )}.`,
      };
    }
    if (activeTab === HomeTab.SERVICE) {
      return {
        title: `–ó–∞–ø–∏—Å—å –Ω–∞ —Å–µ—Ä–≤–∏—Å ${getFormattedCity(current)}`,
        description: '–†–∞–∑–º–µ—Å—Ç–∏ –∑–∞—è–≤–∫—É –Ω–∞ —Å–µ—Ä–≤–∏—Å –∏ –ø–æ–ª—É—á–∏ –≤—ã–≥–æ–¥–Ω–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ',
      };
    }
    if (activeTab === HomeTab.INSURANCE) {
      return {
        title: `–ê–≤—Ç–æ—Å—Ç—Ä–∞—Ö–æ–≤–∞–Ω–∏–µ –û–°–ê–ì–û ${getFormattedCity(current)} - –∫—É–ø–∏—Ç—å —Å—Ç—Ä–∞—Ö–æ–≤–∫—É –∞–≤—Ç–æ–º–æ–±–∏–ª—è –æ–Ω–ª–∞–π–Ω`,
        // prettier-ignore
        description: `–ê–≤—Ç–æ—Å—Ç—Ä–∞—Ö–æ–≤–∞–Ω–∏–µ –û–°–ê–ì–û ${getFormattedCity(
          current,
        )}. –í—ã–≥–æ–¥–Ω—ã–µ —É—Å–ª–æ–≤–∏—è —Å—Ç—Ä–∞—Ö–æ–≤–∞–Ω–∏—è –∞–≤—Ç–æ–º–æ–±–∏–ª—è –æ–Ω–ª–∞–π–Ω - –∑–∞–π–¥–∏—Ç–µ –∏ —É–±–µ–¥–∏—Ç–µ—Å—å!`,
      };
    }
    if (activeTab === HomeTab.INSTALLMENT) {
      const pluralizeCount = `${offersCount} ${pluralizeOffer(offersCount)}`;
      return {
        title: `–ö—É–ø–∏—Ç—å –∞–≤—Ç–æ –≤ —Ä–∞—Å—Å—Ä–æ—á–∫—É ${getFormattedCity(
          current,
        )} –Ω–∞ –ë–∞–Ω–∫–ê–≤—Ç–æ.—Ä—É - —Ü–µ–Ω—ã –æ—Ç ${installmentMonthlyPayment}—Ä. –≤ –º–µ—Å—è—Ü`,
        description: `–í—ã–≥–æ–¥–Ω—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –ø–æ –ø–æ–∫—É–ø–∫–µ –∞–≤—Ç–æ –≤ —Ä–∞—Å—Å—Ä–æ—á–∫—É –Ω–∞ –ë–∞–Ω–∫–ê–≤—Ç–æ.—Ä—É - —Ü–µ–Ω—ã –æ—Ç ${installmentMonthlyPayment}—Ä. –≤ –º–µ—Å—è—Ü! ${pluralizeCount}!`,
      };
    }
    const pluralizeCount = `${carsCount} ${pluralizeAds(carsCount)}`;
    return {
      title: `–ö—É–ø–∏—Ç—å –∞–≤—Ç–æ ${getFormattedCity(
        current,
      )} üöó –¶–µ–Ω–∞ –æ—Ç ${minPrice} —Ä—É–± - –ø—Ä–æ–¥–∞–∂–∞ –Ω–æ–≤—ã—Ö –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π –æ—Ç –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–≥–æ –¥–∏–ª–µ—Ä–∞`,
      description: `–ö—É–ø–∏—Ç—å –∞–≤—Ç–æ ${getFormattedCity(
        current,
      )} üöó –¶–µ–Ω–∞ –æ—Ç ${minPrice} —Ä—É–±. –ü—Ä–æ–¥–∞–∂–∞ –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π –æ—Ç –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–≥–æ –¥–∏–ª–µ—Ä–∞ ‚Äì –±–æ–ª–µ–µ ${pluralizeCount}! –ó–∞—Ö–æ–¥–∏—Ç–µ –∏ –≤—ã–±–∏—Ä–∞–π—Ç–µ!`,
    };
  }, [activeTab, carsCount, current, installmentMonthlyPayment, minPrice, offersCount]);

  return <Meta canonical={!isCanonical ? canonical : undefined} {...metaTags} />;
});
