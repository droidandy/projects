{
  "swagger": "2.0",
  "info": {
    "title": "Gett: Driver Portal",
    "version": "v1",
    "description": "This is driver portal service"
  },
  "schemes": [
    "http"
  ],
  "basePath": "/api/v1",
  "paths": {
    "/admins": {
      "post": {
        "summary": "Create admin user",
        "tags": [
          "Admins"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "attributes",
            "in": "body",
            "description": "User attributes",
            "schema": {
              "type": "object",
              "properties": {
                "attributes": {
                  "type": "object",
                  "properties": {
                    "email": {
                      "type": "string",
                      "example": "anton.macius@gettaxi.com"
                    },
                    "first_name": {
                      "type": "string",
                      "example": "John1"
                    },
                    "last_name": {
                      "type": "string",
                      "example": "Doe"
                    },
                    "active": {
                      "type": "boolean",
                      "example": "+7987654321"
                    },
                    "role": {
                      "type": "string",
                      "enum": [
                        "community_manager",
                        "compliance_agent",
                        "driver_support",
                        "site_admin",
                        "onboarding_agent"
                      ]
                    }
                  }
                }
              },
              "required": [
                "attributes"
              ]
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "description": "Access token",
            "required": true
          }
        ],
        "responses": {
          "401": {
            "description": "authentication error",
            "schema": {
              "$ref": "#/definitions/errors"
            }
          },
          "200": {
            "description": "user updated successfully",
            "schema": {
              "$ref": "#/definitions/user"
            }
          }
        }
      }
    },
    "/admins/{id}": {
      "put": {
        "summary": "Update admin user",
        "tags": [
          "Admins"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "attributes",
            "in": "body",
            "description": "User attributes",
            "schema": {
              "type": "object",
              "properties": {
                "attributes": {
                  "type": "object",
                  "properties": {
                    "email": {
                      "type": "string",
                      "example": "anton.macius@gettaxi.com"
                    },
                    "first_name": {
                      "type": "string",
                      "example": "John1"
                    },
                    "last_name": {
                      "type": "string",
                      "example": "Doe"
                    },
                    "active": {
                      "type": "boolean",
                      "example": "+7987654321"
                    },
                    "role": {
                      "type": "string",
                      "enum": [
                        "community_manager",
                        "compliance_agent",
                        "driver_support",
                        "site_admin",
                        "onboarding_agent"
                      ]
                    }
                  }
                }
              },
              "required": [
                "attributes"
              ]
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "description": "Access token",
            "required": true
          }
        ],
        "responses": {
          "401": {
            "description": "authentication error",
            "schema": {
              "$ref": "#/definitions/errors"
            }
          },
          "200": {
            "description": "user updated successfully",
            "schema": {
              "$ref": "#/definitions/user"
            }
          }
        }
      }
    },
    "/assignment/agents/{agent_id}/assign_driver": {
      "post": {
        "summary": "Assign a driver to an agent",
        "tags": [
          "Agents"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "agent_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "params",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "driver_id": {
                  "type": "integer",
                  "example": 1
                }
              }
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "description": "Access token",
            "required": true
          }
        ],
        "responses": {
          "401": {
            "description": "authentication error",
            "schema": {
              "$ref": "#/definitions/errors"
            }
          },
          "200": {
            "description": "Driver assigned",
            "schema": {
              "$ref": "#/definitions/assignment_driver"
            }
          }
        }
      }
    },
    "/assignment/agents/change_status": {
      "post": {
        "summary": "Change agent status",
        "tags": [
          "Agents"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "params",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "integer",
                  "example": "available"
                }
              }
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "description": "Access token",
            "required": true
          }
        ],
        "responses": {
          "401": {
            "description": "authentication error",
            "schema": {
              "$ref": "#/definitions/errors"
            }
          },
          "200": {
            "description": "Driver assigned"
          }
        }
      }
    },
    "/assignment/agents": {
      "get": {
        "summary": "Responds with list of onboarding agents and managers",
        "tags": [
          "Agents"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "per_page",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "description": "Access token",
            "required": true
          }
        ],
        "responses": {
          "401": {
            "description": "authentication error",
            "schema": {
              "$ref": "#/definitions/errors"
            }
          },
          "200": {
            "description": "successfully returns list of compliance agents and managers",
            "schema": {
              "type": "object",
              "properties": {
                "users": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/agent"
                  }
                },
                "total": {
                  "type": "integer",
                  "example": 11
                },
                "page": {
                  "type": "integer",
                  "example": 1
                },
                "per_page": {
                  "type": "integer",
                  "example": 5
                },
                "channels": {
                  "type": "object",
                  "example": {
                    "agent_status_update": "abc123",
                    "agent_driver_assignment": "123abc"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/assignment/drivers/{id}/check_identity": {
      "post": {
        "summary": "Check identity of given user",
        "tags": [
          "Users"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "description": "Access token",
            "required": true
          }
        ],
        "responses": {
          "401": {
            "description": "authentication error",
            "schema": {
              "$ref": "#/definitions/errors"
            }
          },
          "200": {
            "description": "user picked for approval successfully",
            "schema": {
              "$ref": "#/definitions/assignment_driver"
            }
          }
        }
      }
    },
    "/assignment/drivers/{id}/check_in": {
      "post": {
        "summary": "Check in given user",
        "tags": [
          "Users"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "description": "Access token",
            "required": true
          }
        ],
        "responses": {
          "401": {
            "description": "authentication error",
            "schema": {
              "$ref": "#/definitions/errors"
            }
          },
          "200": {
            "description": "user picked for approval successfully",
            "schema": {
              "$ref": "#/definitions/assignment_driver"
            }
          }
        }
      }
    },
    "/assignment/drivers": {
      "get": {
        "summary": "Responds with list of drivers",
        "tags": [
          "Users"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "type": "string",
            "required": false
          },
          {
            "name": "ready_for_assignment",
            "in": "query",
            "type": "boolean",
            "required": false
          },
          {
            "name": "from",
            "in": "query",
            "type": "string",
            "format": "date-time",
            "example": "2017-10-25T00:00:00Z",
            "description": "Use ISO8601 format",
            "required": false
          },
          {
            "name": "to",
            "in": "query",
            "type": "string",
            "format": "date-time",
            "example": "2017-11-12T23:59:59Z",
            "description": "Use ISO8601 format",
            "required": false
          },
          {
            "name": "page",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "per_page",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "description": "Access token",
            "required": true
          }
        ],
        "responses": {
          "401": {
            "description": "authentication error",
            "schema": {
              "$ref": "#/definitions/errors"
            }
          },
          "200": {
            "description": "successfully requested list of drivers",
            "schema": {
              "type": "object",
              "properties": {
                "drivers": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/assignment_driver"
                  }
                },
                "total": {
                  "type": "integer",
                  "example": 11
                },
                "page": {
                  "type": "integer",
                  "example": 1
                },
                "per_page": {
                  "type": "integer",
                  "example": 5
                },
                "channels": {
                  "type": "object",
                  "example": {
                    "agent_driver_assignment": "abc123",
                    "driver_documents_status": "123abc"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/documents/kinds": {
      "get": {
        "summary": "Responds with list of document kinds",
        "tags": [
          "Documents"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "description": "Access token",
            "required": true
          }
        ],
        "responses": {
          "401": {
            "description": "authentication error",
            "schema": {
              "$ref": "#/definitions/errors"
            }
          },
          "200": {
            "description": "successfully requested list of document kinds",
            "schema": {
              "type": "object",
              "properties": {
                "kinds": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/documents_kind"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/earnings/email_me": {
      "post": {
        "summary": "Sends CSV with earnings data to driver",
        "tags": [
          "Earnings"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Body",
            "schema": {
              "type": "object",
              "properties": {
                "from": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2017-11-15T00:00:00Z",
                  "description": "Use ISO8601 format"
                },
                "to": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2017-11-15T00:00:00Z",
                  "description": "Use ISO8601 format"
                },
                "external_ids": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "List of external IDs to filter by",
                  "example": [
                    "2249477303",
                    "uk_10_151281_93669514_2017-11-13...2017-11-20"
                  ]
                }
              }
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "description": "Access token",
            "required": true
          }
        ],
        "responses": {
          "401": {
            "description": "authentication error",
            "schema": {
              "$ref": "#/definitions/errors"
            }
          },
          "200": {
            "description": "CSV sent successfully"
          }
        }
      }
    },
    "/earnings/generate_csv": {
      "post": {
        "summary": "Generates CSV with earnings data",
        "tags": [
          "Earnings"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Session object that contains information about user",
            "schema": {
              "type": "object",
              "properties": {
                "from": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2017-11-15T00:00:00Z",
                  "description": "Use ISO8601 format"
                },
                "to": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2017-11-16T23:59:59Z",
                  "description": "Use ISO8601 format"
                },
                "external_ids": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "List of external IDs to filter by",
                  "example": "2249477303,uk_10_151281_93669514_2017-11-13...2017-11-20"
                }
              },
              "required": [
                "from",
                "to"
              ]
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "description": "Access token",
            "required": true
          }
        ],
        "responses": {
          "401": {
            "description": "authentication error",
            "schema": {
              "$ref": "#/definitions/errors"
            }
          },
          "200": {
            "description": "CSV generated successfully",
            "schema": {
              "type": "object",
              "properties": {
                "url": {
                  "type": "string",
                  "example": "/system/uploads/downloads/filename.csv",
                  "description": "URL of generated file"
                }
              }
            }
          }
        }
      }
    },
    "/earnings": {
      "get": {
        "summary": "Responds with list of earnings for current user",
        "tags": [
          "Earnings"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "from",
            "in": "query",
            "type": "string",
            "format": "date-time",
            "example": "2017-11-15T00:00:00Z",
            "description": "Use ISO8601 format"
          },
          {
            "name": "to",
            "in": "query",
            "type": "string",
            "format": "date-time",
            "example": "2017-11-16T23:59:59Z",
            "description": "Use ISO8601 format"
          },
          {
            "name": "page",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "per_page",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "description": "Access token",
            "required": true
          }
        ],
        "responses": {
          "401": {
            "description": "authentication error",
            "schema": {
              "$ref": "#/definitions/errors"
            }
          },
          "200": {
            "description": "successfully requested list of earnings",
            "schema": {
              "type": "object",
              "properties": {
                "earnings": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/earning"
                  }
                }
              }
            }
          },
          "422": {
            "description": "3rd-party API responds with error",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "was not retrieved"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/earnings/share": {
      "post": {
        "summary": "Sends CSV with earnings data to multiple emails",
        "tags": [
          "Earnings"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Body",
            "schema": {
              "type": "object",
              "properties": {
                "from": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2017-11-15T00:00:00Z",
                  "description": "Use ISO8601 format"
                },
                "to": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2017-11-15T00:00:00Z",
                  "description": "Use ISO8601 format"
                },
                "external_ids": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "List of external IDs to filter by",
                  "example": [
                    "2249477303",
                    "uk_10_151281_93669514_2017-11-13...2017-11-20"
                  ]
                },
                "emails": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "List of emails where CSV should be sent",
                  "example": [
                    "aaa@mail.com",
                    "bbb@mail.com"
                  ]
                },
                "body": {
                  "type": "string",
                  "description": "Text to be inserted into email"
                }
              }
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "description": "Access token",
            "required": true
          }
        ],
        "responses": {
          "401": {
            "description": "authentication error",
            "schema": {
              "$ref": "#/definitions/errors"
            }
          },
          "200": {
            "description": "CSV sent successfully"
          }
        }
      }
    },
    "/users/invites": {
      "post": {
        "summary": "Sends invites to multiple user",
        "tags": [
          "Users"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Body",
            "schema": {
              "type": "object",
              "properties": {
                "user_ids": {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                }
              }
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "description": "Access token",
            "required": true
          }
        ],
        "responses": {
          "401": {
            "description": "authentication error",
            "schema": {
              "$ref": "#/definitions/errors"
            }
          },
          "200": {
            "description": "successfully sent invites to the users",
            "schema": {
              "$ref": "#/definitions/batch_results"
            }
          }
        }
      }
    },
    "/users/{user_id}/invites": {
      "post": {
        "summary": "Sends invite to user",
        "tags": [
          "Users"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "description": "Access token",
            "required": true
          }
        ],
        "responses": {
          "401": {
            "description": "authentication error",
            "schema": {
              "$ref": "#/definitions/errors"
            }
          },
          "200": {
            "description": "successfully sent invite to the user",
            "schema": {
              "$ref": "#/definitions/invite"
            }
          }
        }
      }
    },
    "/invites/{token}": {
      "get": {
        "summary": "Get information about invite",
        "tags": [
          "Users"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successfully requested information about invite",
            "schema": {
              "type": "object",
              "properties": {
                "$ref": "#/definitions/invite"
              }
            }
          }
        }
      },
      "post": {
        "summary": "Accept invite",
        "tags": [
          "Users"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "description": "Request body",
            "schema": {
              "type": "object",
              "properties": {
                "password": {
                  "type": "string",
                  "example": "123456789"
                },
                "password_confirmation": {
                  "type": "string",
                  "example": "test@example.com"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successfully accepted invite on final step",
            "schema": {
              "type": "object",
              "properties": {
                "$ref": "#/definitions/invite",
                "access_token": {
                  "type": "string",
                  "example": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpZCI6OSwiZW1haWwiOiJ0ZXN0QGV4YW1wbGUuY29tIiwidXVpZCI6ImI4MDRlNGYzLTYyNjAtNGNmZC04NzEwLWQ2ZTFmOTE4NmU3OSIsImNyZWF0ZWRfYXQiOiIyMDE3LTA2LTAyIDEyOjIxOjE3IFVUQyJ9.k4d1zmfVaWqbHqNSZhQ8WdVAFqX1hTG7byaaj12GWfk",
                  "description": "Created JWT token for the session"
                },
                "user": {
                  "$ref": "#/definitions/user"
                }
              }
            }
          },
          "422": {
            "description": "validation has been failed",
            "schema": {
              "type": "object",
              "properties": {
                "$ref": "#/definitions/errors"
              }
            }
          }
        }
      }
    },
    "/news/{news_id}/comments/{id}/comments": {
      "post": {
        "summary": "Creates nested comment for news item comment",
        "tags": [
          "News"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "news_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body",
            "schema": {
              "type": "object",
              "properties": {
                "content": {
                  "type": "string"
                }
              }
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "description": "Access token",
            "required": true
          }
        ],
        "responses": {
          "401": {
            "description": "authentication error",
            "schema": {
              "$ref": "#/definitions/errors"
            }
          },
          "200": {
            "description": "successfully created nested comment",
            "schema": {
              "type": "object",
              "properties": {
                "$ref": "#/definitions/comment"
              }
            }
          }
        }
      }
    },
    "/news/{news_id}/comments": {
      "post": {
        "summary": "Creates comment for news item",
        "tags": [
          "News"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "news_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body",
            "schema": {
              "type": "object",
              "properties": {
                "content": {
                  "type": "string"
                }
              }
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "description": "Access token",
            "required": true
          }
        ],
        "responses": {
          "401": {
            "description": "authentication error",
            "schema": {
              "$ref": "#/definitions/errors"
            }
          },
          "200": {
            "description": "successfully created comment",
            "schema": {
              "type": "object",
              "properties": {
                "$ref": "#/definitions/comment"
              }
            }
          }
        }
      },
      "get": {
        "summary": "Responds with list of comments for news item",
        "tags": [
          "News"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "news_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "description": "Access token",
            "required": true
          }
        ],
        "responses": {
          "401": {
            "description": "authentication error",
            "schema": {
              "$ref": "#/definitions/errors"
            }
          },
          "200": {
            "description": "successfully requested list of users",
            "schema": {
              "type": "object",
              "properties": {
                "comments": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/comment"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/news/{news_id}/comments/{id}/likes": {
      "post": {
        "summary": "Likes/dislikes given comment",
        "tags": [
          "News"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "news_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "integer",
                  "enum": [
                    1,
                    -1
                  ],
                  "description": "1 for like, -1 for dislike"
                }
              }
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "description": "Access token",
            "required": true
          }
        ],
        "responses": {
          "401": {
            "description": "authentication error",
            "schema": {
              "$ref": "#/definitions/errors"
            }
          },
          "200": {
            "description": "successfully likes/dislikes comment",
            "schema": {
              "type": "object",
              "properties": {
                "$ref": "#/definitions/comment"
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Removes like from given comment",
        "tags": [
          "News"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "news_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "description": "Access token",
            "required": true
          }
        ],
        "responses": {
          "401": {
            "description": "authentication error",
            "schema": {
              "$ref": "#/definitions/errors"
            }
          },
          "200": {
            "description": "successfully removed like",
            "schema": {
              "type": "object",
              "properties": {
                "$ref": "#/definitions/comment"
              }
            }
          }
        }
      }
    },
    "/news": {
      "post": {
        "summary": "Creates news item",
        "tags": [
          "News"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "title",
            "in": "formData",
            "type": "string"
          },
          {
            "name": "published_at",
            "in": "formData",
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "item_type",
            "in": "formData",
            "type": "string",
            "enum": [
              "regular",
              "featured",
              "numbers"
            ]
          },
          {
            "name": "content",
            "in": "formData",
            "type": "string",
            "required": false
          },
          {
            "name": "image",
            "in": "formData",
            "type": "file",
            "required": false
          },
          {
            "name": "number",
            "in": "formData",
            "type": "integer",
            "required": false
          },
          {
            "name": "binding_hash",
            "in": "formData",
            "type": "string",
            "required": false
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "description": "Access token",
            "required": true
          }
        ],
        "responses": {
          "401": {
            "description": "authentication error",
            "schema": {
              "$ref": "#/definitions/errors"
            }
          },
          "200": {
            "description": "successfully create news item",
            "schema": {
              "type": "object",
              "properties": {
                "$ref": "#/definitions/news_item"
              }
            }
          }
        }
      },
      "get": {
        "summary": "Responds with list of news items",
        "tags": [
          "News"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "sort_column",
            "in": "query",
            "type": "string",
            "enum": [
              "author",
              "comments_count",
              "created_at",
              "likes_count",
              "published_at",
              "title",
              "trending_index",
              "views_count"
            ]
          },
          {
            "name": "sort_direction",
            "in": "query",
            "type": "string",
            "enum": [
              "asc",
              "desc"
            ]
          },
          {
            "name": "page",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "per_page",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "description": "Access token",
            "required": true
          }
        ],
        "responses": {
          "401": {
            "description": "authentication error",
            "schema": {
              "$ref": "#/definitions/errors"
            }
          },
          "200": {
            "description": "successfully requested list of news",
            "schema": {
              "type": "object",
              "properties": {
                "news": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/news_item"
                  }
                },
                "total": {
                  "type": "integer",
                  "example": 11
                },
                "page": {
                  "type": "integer",
                  "example": 1
                },
                "per_page": {
                  "type": "integer",
                  "example": 5
                }
              }
            }
          }
        }
      }
    },
    "/news/{id}": {
      "delete": {
        "summary": "Destroy news item",
        "tags": [
          "News"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "description": "Access token",
            "required": true
          }
        ],
        "responses": {
          "401": {
            "description": "authentication error",
            "schema": {
              "$ref": "#/definitions/errors"
            }
          },
          "200": {
            "description": "successfully update news item"
          }
        }
      },
      "get": {
        "summary": "Responds with news item data",
        "tags": [
          "News"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "description": "Access token",
            "required": true
          }
        ],
        "responses": {
          "401": {
            "description": "authentication error",
            "schema": {
              "$ref": "#/definitions/errors"
            }
          },
          "200": {
            "description": "successfully requested news item data",
            "schema": {
              "$ref": "#/definitions/news_item"
            }
          },
          "404": {
            "description": "news item not found"
          }
        }
      },
      "put": {
        "summary": "Updates news item",
        "tags": [
          "News"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "title",
            "in": "formData",
            "type": "string"
          },
          {
            "name": "published_at",
            "in": "formData",
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "item_type",
            "in": "formData",
            "type": "string",
            "enum": [
              "regular",
              "featured",
              "numbers"
            ]
          },
          {
            "name": "content",
            "in": "formData",
            "type": "string",
            "required": false
          },
          {
            "name": "image",
            "in": "formData",
            "type": "file",
            "required": false
          },
          {
            "name": "number",
            "in": "formData",
            "type": "integer",
            "required": false
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "description": "Access token",
            "required": true
          }
        ],
        "responses": {
          "401": {
            "description": "authentication error",
            "schema": {
              "$ref": "#/definitions/errors"
            }
          },
          "200": {
            "description": "successfully update news item",
            "schema": {
              "type": "object",
              "properties": {
                "$ref": "#/definitions/news_item"
              }
            }
          }
        }
      }
    },
    "/news/{news_id}/images": {
      "post": {
        "summary": "Creates image to be pasted into given news item content",
        "tags": [
          "News"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "news_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "image",
            "in": "formData",
            "type": "file"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "description": "Access token",
            "required": true
          }
        ],
        "responses": {
          "401": {
            "description": "authentication error",
            "schema": {
              "$ref": "#/definitions/errors"
            }
          },
          "200": {
            "description": "successfully create image",
            "schema": {
              "type": "object",
              "properties": {
                "$ref": "#/definitions/news_image"
              }
            }
          }
        }
      }
    },
    "/news/images": {
      "post": {
        "summary": "Creates image to be pasted into new news item content",
        "tags": [
          "News"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "image",
            "in": "formData",
            "type": "file"
          },
          {
            "name": "binding_hash",
            "in": "formData",
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "description": "Access token",
            "required": true
          }
        ],
        "responses": {
          "401": {
            "description": "authentication error",
            "schema": {
              "$ref": "#/definitions/errors"
            }
          },
          "200": {
            "description": "successfully create image",
            "schema": {
              "type": "object",
              "properties": {
                "$ref": "#/definitions/news_image"
              }
            }
          }
        }
      }
    },
    "/onboarding": {
      "put": {
        "summary": "Update onboarding",
        "tags": [
          "Onboarding"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "attributes",
            "in": "body",
            "description": "Onboarding attributes",
            "schema": {
              "type": "object",
              "properties": {
                "attributes": {
                  "type": "object",
                  "required": [
                    "onboarding_step"
                  ],
                  "properties": {
                    "attributes": {
                      "onboarding_step": {
                        "type": "number",
                        "example": 1
                      },
                      "email": {
                        "type": "string",
                        "example": "m@il.com"
                      },
                      "first_name": {
                        "type": "string",
                        "example": "John"
                      },
                      "last_name": {
                        "type": "string",
                        "example": "Doe"
                      },
                      "phone": {
                        "type": "string",
                        "example": "+41 123"
                      },
                      "license_number": {
                        "type": "string",
                        "example": "123"
                      },
                      "how_did_you_hear_about": {
                        "type": "string",
                        "example": "ads"
                      },
                      "min_rides_number": {
                        "type": "integer",
                        "example": 100,
                        "enum": [
                          0,
                          100,
                          200,
                          300,
                          400,
                          500
                        ]
                      },
                      "other_rating": {
                        "type": "number",
                        "example": 4.52
                      },
                      "vehicle_reg_year": {
                        "type": "number",
                        "example": 2017
                      },
                      "sort_code": {
                        "type": "string",
                        "example": "123"
                      },
                      "account_number": {
                        "type": "string",
                        "example": "123"
                      },
                      "city": {
                        "type": "string",
                        "example": "London"
                      },
                      "postcode": {
                        "type": "string",
                        "example": "A1 W1W"
                      },
                      "address": {
                        "type": "string",
                        "example": "1 Downing Str."
                      },
                      "insurance_number": {
                        "type": "string",
                        "example": "123"
                      },
                      "insurance_number_agreement": {
                        "type": "boolean",
                        "example": true
                      },
                      "documents_agreement": {
                        "type": "boolean",
                        "example": true
                      },
                      "appointment_scheduled": {
                        "type": "boolean",
                        "example": true
                      },
                      "documents_uploaded": {
                        "type": "boolean",
                        "example": true
                      }
                    }
                  }
                }
              }
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "description": "Access token",
            "required": true
          }
        ],
        "responses": {
          "401": {
            "description": "authentication error",
            "schema": {
              "$ref": "#/definitions/errors"
            }
          },
          "200": {
            "description": "onboarding updated successfully",
            "schema": {
              "$ref": "#/definitions/user"
            }
          }
        }
      }
    },
    "/orders/{id}": {
      "get": {
        "summary": "Responds with order data",
        "tags": [
          "Orders"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "description": "Order ID",
            "example": 123456,
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "description": "Access token",
            "required": true
          }
        ],
        "responses": {
          "401": {
            "description": "authentication error",
            "schema": {
              "$ref": "#/definitions/errors"
            }
          },
          "200": {
            "description": "successfully requested list of earnings",
            "schema": {
              "$ref": "#/definitions/order"
            }
          }
        }
      }
    },
    "/reset_password": {
      "post": {
        "summary": "Creates new reset password token for user",
        "tags": [
          "Users"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Request body",
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "example": "test@example.com"
                }
              },
              "required": [
                "email"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "new session has been created"
          }
        }
      }
    },
    "/reset_password/{token}": {
      "post": {
        "summary": "Resets password for the user by token",
        "tags": [
          "Users"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "description": "Request body",
            "schema": {
              "type": "object",
              "properties": {
                "password": {
                  "type": "string",
                  "example": "123456789"
                },
                "password_confirmation": {
                  "type": "string",
                  "example": "test@example.com"
                }
              },
              "required": [
                "password",
                "password_confirmation"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "new session has been created",
            "schema": {
              "type": "object",
              "properties": {
                "access_token": {
                  "type": "string",
                  "example": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpZCI6OSwiZW1haWwiOiJ0ZXN0QGV4YW1wbGUuY29tIiwidXVpZCI6ImI4MDRlNGYzLTYyNjAtNGNmZC04NzEwLWQ2ZTFmOTE4NmU3OSIsImNyZWF0ZWRfYXQiOiIyMDE3LTA2LTAyIDEyOjIxOjE3IFVUQyJ9.k4d1zmfVaWqbHqNSZhQ8WdVAFqX1hTG7byaaj12GWfk",
                  "description": "Created JWT token for the session"
                },
                "user": {
                  "$ref": "#/definitions/user"
                }
              }
            }
          }
        }
      }
    },
    "/users/{user_id}/review/{requirement}/approve": {
      "post": {
        "summary": "Approve a review requirement",
        "tags": [
          "Review"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "requirement",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "params",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "gett_phone": {
                  "type": "string",
                  "example": "+41 123 456 789"
                }
              }
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "description": "Access token",
            "required": true
          }
        ],
        "responses": {
          "401": {
            "description": "authentication error",
            "schema": {
              "$ref": "#/definitions/errors"
            }
          },
          "200": {
            "description": "Review requirement approved",
            "schema": {
              "type": "object",
              "properties": {
                "review_update": {
                  "type": "object",
                  "properties": {
                    "$ref": "#/definitions/review_update"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/{user_id}/review/approve": {
      "post": {
        "summary": "Approve a review",
        "tags": [
          "Review"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "description": "Access token",
            "required": true
          }
        ],
        "responses": {
          "401": {
            "description": "authentication error",
            "schema": {
              "$ref": "#/definitions/errors"
            }
          },
          "200": {
            "description": "Review approved",
            "schema": {
              "type": "object",
              "properties": {
                "review": {
                  "type": "object",
                  "properties": {
                    "$ref": "#/definitions/review"
                  }
                },
                "review_update": {
                  "type": "object",
                  "properties": {
                    "$ref": "#/definitions/review_update"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/{user_id}/review/history": {
      "get": {
        "summary": "Get review history",
        "tags": [
          "Review"
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "description": "Access token",
            "required": true
          }
        ],
        "responses": {
          "401": {
            "description": "authentication error",
            "schema": {
              "$ref": "#/definitions/errors"
            }
          },
          "200": {
            "description": "Review approved",
            "schema": {
              "type": "object",
              "properties": {
                "reviews": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/review"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/{user_id}/review/{requirement}/reject": {
      "post": {
        "summary": "Reject a review requirement",
        "tags": [
          "Review"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "requirement",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "params",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "comment": {
                  "type": "string",
                  "example": "Comment"
                }
              }
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "description": "Access token",
            "required": true
          }
        ],
        "responses": {
          "401": {
            "description": "authentication error",
            "schema": {
              "$ref": "#/definitions/errors"
            }
          },
          "200": {
            "description": "Review requirement rejected",
            "schema": {
              "type": "object",
              "properties": {
                "review_update": {
                  "type": "object",
                  "properties": {
                    "$ref": "#/definitions/review_update"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/{user_id}/review/reject": {
      "post": {
        "summary": "Reject a review",
        "tags": [
          "Review"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "params",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "comment": {
                  "type": "string",
                  "example": "Comment"
                }
              }
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "description": "Access token",
            "required": true
          }
        ],
        "responses": {
          "401": {
            "description": "authentication error",
            "schema": {
              "$ref": "#/definitions/errors"
            }
          },
          "200": {
            "description": "Review rejected",
            "schema": {
              "type": "object",
              "properties": {
                "review": {
                  "type": "object",
                  "properties": {
                    "$ref": "#/definitions/review"
                  }
                },
                "review_update": {
                  "type": "object",
                  "properties": {
                    "$ref": "#/definitions/review_update"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/{user_id}/review/stats": {
      "get": {
        "summary": "Get review stats",
        "tags": [
          "Review"
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "description": "Access token",
            "required": true
          }
        ],
        "responses": {
          "401": {
            "description": "authentication error",
            "schema": {
              "$ref": "#/definitions/errors"
            }
          },
          "200": {
            "description": "Review approved",
            "schema": {
              "type": "object",
              "properties": {
                "gett_phone": {
                  "type": "string"
                },
                "compliance_verified": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/": {
      "get": {
        "summary": "Responds with simple hello message",
        "tags": [
          "Root"
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful check",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "It works!"
                }
              }
            }
          }
        }
      }
    },
    "/session/assignment/drivers": {
      "get": {
        "summary": "Responds with list of drivers assigned to current user",
        "tags": [
          "Review"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "description": "Access token",
            "required": true
          }
        ],
        "responses": {
          "401": {
            "description": "authentication error",
            "schema": {
              "$ref": "#/definitions/errors"
            }
          },
          "200": {
            "description": "successfully requested list of drivers",
            "schema": {
              "type": "object",
              "properties": {
                "drivers": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/assignment_driver"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/session/documents": {
      "post": {
        "summary": "Creates new document for current user",
        "tags": [
          "Documents"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "kind",
            "in": "formData",
            "type": "string",
            "description": "Kind slug"
          },
          {
            "name": "file",
            "in": "formData",
            "type": "file",
            "required": false
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "description": "Access token",
            "required": true
          }
        ],
        "responses": {
          "401": {
            "description": "authentication error",
            "schema": {
              "$ref": "#/definitions/errors"
            }
          },
          "200": {
            "description": "successfully create document",
            "schema": {
              "$ref": "#/definitions/document"
            }
          }
        }
      },
      "get": {
        "summary": "Responds with list of current user documents",
        "tags": [
          "Documents"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "description": "Access token",
            "required": true
          }
        ],
        "responses": {
          "401": {
            "description": "authentication error",
            "schema": {
              "$ref": "#/definitions/errors"
            }
          },
          "200": {
            "description": "successfully requested list of documents",
            "schema": {
              "type": "object",
              "properties": {
                "documents": {
                  "type": "object",
                  "properties": {
                    "required": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/document"
                      }
                    },
                    "optional": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/document"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/session/avatar": {
      "put": {
        "summary": "Upload new avatar for given user",
        "tags": [
          "Sessions"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "avatar",
            "in": "formData",
            "type": "file"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "description": "Access token",
            "required": true
          },
          {
            "name": "Admin-Authorization",
            "in": "header",
            "type": "string",
            "description": "Admin access token for log-is-as cases",
            "required": false
          }
        ],
        "responses": {
          "401": {
            "description": "authentication error",
            "schema": {
              "$ref": "#/definitions/errors"
            }
          },
          "200": {
            "description": "successfully create document",
            "schema": {
              "type": "object",
              "properties": {
                "avatar_url": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/session/vehicles": {
      "post": {
        "summary": "Creates news vehicle for current user",
        "tags": [
          "Vehicles"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "title",
            "in": "formData",
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "description": "Access token",
            "required": true
          }
        ],
        "responses": {
          "401": {
            "description": "authentication error",
            "schema": {
              "$ref": "#/definitions/errors"
            }
          },
          "200": {
            "description": "successfully create vehicle",
            "schema": {
              "$ref": "#/definitions/vehicle"
            }
          }
        }
      },
      "get": {
        "summary": "Responds with list of current user vehicles",
        "tags": [
          "Vehicles"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "description": "Access token",
            "required": true
          }
        ],
        "responses": {
          "401": {
            "description": "authentication error",
            "schema": {
              "$ref": "#/definitions/errors"
            }
          },
          "200": {
            "description": "successfully requested list of vehicles",
            "schema": {
              "type": "object",
              "properties": {
                "vehicles": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/vehicle"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/session/vehicles/{id}": {
      "delete": {
        "summary": "Deactivates current user vehicle",
        "tags": [
          "Vehicles"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "description": "Access token",
            "required": true
          }
        ],
        "responses": {
          "401": {
            "description": "authentication error",
            "schema": {
              "$ref": "#/definitions/errors"
            }
          },
          "200": {
            "description": "successfully deactivate vehicle"
          }
        }
      },
      "put": {
        "summary": "Updates current user vehicle",
        "tags": [
          "Vehicles"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "title",
            "in": "formData",
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "description": "Access token",
            "required": true
          }
        ],
        "responses": {
          "401": {
            "description": "authentication error",
            "schema": {
              "$ref": "#/definitions/errors"
            }
          },
          "200": {
            "description": "successfully update vehicle",
            "schema": {
              "$ref": "#/definitions/vehicle"
            }
          }
        }
      }
    },
    "/session/vehicles/{vehicle_id}/documents": {
      "post": {
        "summary": "Creates new document for given vehicle",
        "tags": [
          "Vehicles"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "vehicle_id",
            "in": "path",
            "required": true
          },
          {
            "name": "kind",
            "in": "formData",
            "type": "string",
            "description": "Kind slug"
          },
          {
            "name": "file",
            "in": "formData",
            "type": "file",
            "required": false
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "description": "Access token",
            "required": true
          }
        ],
        "responses": {
          "401": {
            "description": "authentication error",
            "schema": {
              "$ref": "#/definitions/errors"
            }
          },
          "200": {
            "description": "successfully create document",
            "schema": {
              "$ref": "#/definitions/document"
            }
          }
        }
      }
    },
    "/session/vehicles/{id}/set_as_current": {
      "post": {
        "summary": "Marks user vehicle as current",
        "tags": [
          "Vehicles"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "description": "Access token",
            "required": true
          }
        ],
        "responses": {
          "401": {
            "description": "authentication error",
            "schema": {
              "$ref": "#/definitions/errors"
            }
          },
          "200": {
            "description": "successfully deactivate vehicle",
            "schema": {
              "type": "object",
              "properties": {
                "vehicles": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/vehicle"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/session": {
      "post": {
        "summary": "Creates new session",
        "tags": [
          "Sessions"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "session",
            "in": "body",
            "description": "Session object that contains information about user",
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "example": "test@example.com"
                },
                "password": {
                  "type": "string",
                  "example": "123456789"
                }
              },
              "required": [
                "email",
                "password"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "new session has been created",
            "schema": {
              "type": "object",
              "properties": {
                "access_token": {
                  "type": "string",
                  "example": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpZCI6OSwiZW1haWwiOiJ0ZXN0QGV4YW1wbGUuY29tIiwidXVpZCI6ImI4MDRlNGYzLTYyNjAtNGNmZC04NzEwLWQ2ZTFmOTE4NmU3OSIsImNyZWF0ZWRfYXQiOiIyMDE3LTA2LTAyIDEyOjIxOjE3IFVUQyJ9.k4d1zmfVaWqbHqNSZhQ8WdVAFqX1hTG7byaaj12GWfk",
                  "description": "Created JWT token for the session"
                },
                "user": {
                  "$ref": "#/definitions/user"
                }
              }
            }
          },
          "422": {
            "description": "session validation has been failed",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "object",
                  "properties": {
                    "your_credentials": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "are invalid"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Provides access to current session",
        "tags": [
          "Sessions"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "description": "Access token",
            "required": true
          }
        ],
        "responses": {
          "401": {
            "description": "authentication error",
            "schema": {
              "$ref": "#/definitions/errors"
            }
          },
          "200": {
            "description": "successful access to current session object",
            "schema": {
              "$ref": "#/definitions/user"
            }
          }
        }
      },
      "put": {
        "summary": "Update user profile",
        "tags": [
          "Sessions"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "attributes",
            "in": "body",
            "description": "User attributes to be updated",
            "schema": {
              "type": "object",
              "properties": {
                "attributes": {
                  "type": "object",
                  "properties": {
                    "email": {
                      "type": "string",
                      "example": "anton.macius@gettaxi.com"
                    },
                    "first_name": {
                      "type": "string",
                      "example": "John1"
                    },
                    "last_name": {
                      "type": "string",
                      "example": "Doe"
                    },
                    "phone": {
                      "type": "string",
                      "example": "+7987654321"
                    },
                    "address": {
                      "type": "string"
                    },
                    "postcode": {
                      "type": "string"
                    },
                    "hobbies": {
                      "type": "string"
                    },
                    "talking_topics": {
                      "type": "string"
                    },
                    "driving_cab_since": {
                      "type": "string",
                      "format": "date"
                    },
                    "disability_type": {
                      "type": "string"
                    },
                    "disability_description": {
                      "type": "string"
                    },
                    "account_number": {
                      "type": "string"
                    },
                    "sort_code": {
                      "type": "string"
                    },
                    "vehicle_colour": {
                      "type": "string"
                    },
                    "birth_date": {
                      "type": "string",
                      "format": "date"
                    },
                    "city": {
                      "type": "string",
                      "example": "Pochinki"
                    }
                  },
                  "required": [

                  ]
                }
              },
              "required": [
                "attributes"
              ]
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "description": "Access token",
            "required": true
          }
        ],
        "responses": {
          "401": {
            "description": "authentication error",
            "schema": {
              "$ref": "#/definitions/errors"
            }
          },
          "200": {
            "description": "user updated successfully",
            "schema": {
              "$ref": "#/definitions/user"
            }
          }
        }
      }
    },
    "/session/metrics": {
      "get": {
        "summary": "Responds with metrics for current user",
        "tags": [
          "Sessions"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "description": "Access token",
            "required": true
          }
        ],
        "responses": {
          "401": {
            "description": "authentication error",
            "schema": {
              "$ref": "#/definitions/errors"
            }
          },
          "200": {
            "description": "successfully requested user metrics",
            "schema": {
              "$ref": "#/definitions/metrics"
            }
          },
          "422": {
            "description": "3rd-party API responds with error",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "was not retrieved"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/session/stats": {
      "get": {
        "summary": "Responds with weekly stats for current user",
        "tags": [
          "Sessions"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "description": "Access token",
            "required": true
          }
        ],
        "responses": {
          "401": {
            "description": "authentication error",
            "schema": {
              "$ref": "#/definitions/errors"
            }
          },
          "200": {
            "description": "successfully requested user stats",
            "schema": {
              "$ref": "#/definitions/week_stats"
            }
          },
          "422": {
            "description": "3rd-party API responds with error",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "was not retrieved"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/session/total_distance": {
      "get": {
        "summary": "Responds with total distance driven by current user since current week",
        "tags": [
          "Sessions"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "description": "Access token",
            "required": true
          }
        ],
        "responses": {
          "401": {
            "description": "authentication error",
            "schema": {
              "$ref": "#/definitions/errors"
            }
          },
          "200": {
            "description": "successfully requested user stats",
            "schema": {
              "type": "object",
              "properties": {
                "distance": {
                  "type": "number",
                  "format": "float",
                  "example": 1.234
                }
              }
            }
          },
          "422": {
            "description": "3rd-party API responds with error",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "was not retrieved"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/statements/by_date": {
      "get": {
        "summary": "Responds with statement details, covering given date",
        "tags": [
          "Statements"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "issued_at",
            "in": "query",
            "type": "string",
            "format": "date-time",
            "example": "2017-11-16T23:59:59Z",
            "description": "Pass earning issued_at in ISO8601 format"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "description": "Access token",
            "required": true
          }
        ],
        "responses": {
          "401": {
            "description": "authentication error",
            "schema": {
              "$ref": "#/definitions/errors"
            }
          },
          "200": {
            "description": "successfully requested list of earnings",
            "schema": {
              "$ref": "#/definitions/statement"
            }
          }
        }
      }
    },
    "/statements/email_me": {
      "post": {
        "summary": "Sends PDFs with statements data to driver",
        "tags": [
          "Statements"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Body",
            "schema": {
              "type": "object",
              "properties": {
                "ids": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "List of statements IDs to filter by",
                  "example": [
                    "3016373",
                    "2908601"
                  ]
                }
              }
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "description": "Access token",
            "required": true
          }
        ],
        "responses": {
          "401": {
            "description": "authentication error",
            "schema": {
              "$ref": "#/definitions/errors"
            }
          },
          "200": {
            "description": "PDFs sent successfully"
          }
        }
      }
    },
    "/statements/generate_pdf": {
      "post": {
        "summary": "Generate ZIP with statements PDFs",
        "tags": [
          "Statements"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Session object that contains information about user",
            "schema": {
              "type": "object",
              "properties": {
                "from": {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  },
                  "description": "List of statements IDs",
                  "example": "[3016373, 2908601]"
                }
              },
              "required": [
                "ids"
              ]
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "description": "Access token",
            "required": true
          }
        ],
        "responses": {
          "401": {
            "description": "authentication error",
            "schema": {
              "$ref": "#/definitions/errors"
            }
          },
          "200": {
            "description": "PDFs sent successfully",
            "schema": {
              "type": "object",
              "properties": {
                "url": {
                  "type": "string",
                  "example": "/system/uploads/downloads/filename.csv",
                  "description": "URL of generated file"
                }
              }
            }
          }
        }
      }
    },
    "/statements": {
      "get": {
        "summary": "Responds with list of statements for current user",
        "tags": [
          "Statements"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "from",
            "in": "query",
            "type": "string",
            "format": "date-time",
            "example": "2017-10-25T00:00:00Z",
            "description": "Use ISO8601 format",
            "required": false
          },
          {
            "name": "to",
            "in": "query",
            "type": "string",
            "format": "date-time",
            "example": "2017-11-12T23:59:59Z",
            "description": "Use ISO8601 format",
            "required": false
          },
          {
            "name": "ids",
            "in": "query",
            "type": "array",
            "items": {
              "type": "integer"
            },
            "description": "List of statements IDs delimited by commas",
            "example": "3016373,2908601",
            "required": false
          },
          {
            "name": "page",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "per_page",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "description": "Access token",
            "required": true
          }
        ],
        "responses": {
          "401": {
            "description": "authentication error",
            "schema": {
              "$ref": "#/definitions/errors"
            }
          },
          "200": {
            "description": "successfully requested list of statements",
            "schema": {
              "type": "object",
              "properties": {
                "statements": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/statement"
                  }
                }
              }
            }
          },
          "422": {
            "description": "3rd-party API responds with error",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "was not retrieved"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/statements/share": {
      "post": {
        "summary": "Sends PDFs with statements data to multiple emails",
        "tags": [
          "Statements"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Body",
            "schema": {
              "type": "object",
              "properties": {
                "ids": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "List of statements IDs to filter by",
                  "example": [
                    "3016373",
                    "2908601"
                  ]
                },
                "emails": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "List of emails where CSV should be sent",
                  "example": [
                    "aaa@mail.com",
                    "bbb@mail.com"
                  ]
                },
                "body": {
                  "type": "string",
                  "description": "Text to be inserted into email"
                }
              }
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "description": "Access token",
            "required": true
          }
        ],
        "responses": {
          "401": {
            "description": "authentication error",
            "schema": {
              "$ref": "#/definitions/errors"
            }
          },
          "200": {
            "description": "PDFs sent successfully"
          }
        }
      }
    },
    "/statistics/daily/{type}": {
      "get": {
        "summary": "Responds with daily statistics values",
        "tags": [
          "Statistics"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "type",
            "in": "path",
            "type": "string",
            "enum": [
              "active_users",
              "login_count"
            ],
            "required": true
          },
          {
            "name": "from",
            "in": "query",
            "type": "string",
            "format": "date",
            "example": "2017-10-25",
            "description": "Use YYYY-MM-DD format"
          },
          {
            "name": "to",
            "in": "query",
            "type": "string",
            "format": "date",
            "example": "2017-11-12",
            "description": "Use YYYY-MM-DD format"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "description": "Access token",
            "required": true
          }
        ],
        "responses": {
          "401": {
            "description": "authentication error",
            "schema": {
              "$ref": "#/definitions/errors"
            }
          },
          "200": {
            "description": "successfully requested daily statistics",
            "schema": {
              "type": "object",
              "properties": {
                "entries": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "date": {
                        "type": "string",
                        "format": "date"
                      },
                      "amount": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/statistics/monthly/{type}": {
      "get": {
        "summary": "Responds with monthly statistics values",
        "tags": [
          "Statistics"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "type",
            "in": "path",
            "type": "string",
            "enum": [
              "active_users",
              "login_count"
            ],
            "required": true
          },
          {
            "name": "from",
            "in": "query",
            "type": "string",
            "format": "date",
            "example": "2017-10-25",
            "description": "Use YYYY-MM-DD format"
          },
          {
            "name": "to",
            "in": "query",
            "type": "string",
            "format": "date",
            "example": "2017-11-12",
            "description": "Use YYYY-MM-DD format"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "description": "Access token",
            "required": true
          }
        ],
        "responses": {
          "401": {
            "description": "authentication error",
            "schema": {
              "$ref": "#/definitions/errors"
            }
          },
          "200": {
            "description": "successfully requested monthly statistics",
            "schema": {
              "type": "object",
              "properties": {
                "entries": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "month": {
                        "type": "integer"
                      },
                      "year": {
                        "type": "integer"
                      },
                      "amount": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/support_requests": {
      "post": {
        "summary": "Sends email to support team",
        "tags": [
          "Support requests"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Body",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "description": "Access token",
            "required": true
          }
        ],
        "responses": {
          "401": {
            "description": "authentication error",
            "schema": {
              "$ref": "#/definitions/errors"
            }
          },
          "200": {
            "description": "successfully sent invites to the users"
          }
        }
      }
    },
    "/system/status": {
      "get": {
        "summary": "Responds with external APIs availability status",
        "tags": [
          "System"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "description": "Access token",
            "required": true
          }
        ],
        "responses": {
          "401": {
            "description": "authentication error",
            "schema": {
              "$ref": "#/definitions/errors"
            }
          },
          "200": {
            "description": "status successfully requested",
            "schema": {
              "type": "object",
              "properties": {
                "earnings": {
                  "type": "object",
                  "properties": {
                    "earnings": {
                      "type": "boolean"
                    }
                  }
                },
                "fleet": {
                  "type": "object",
                  "properties": {
                    "drivers": {
                      "type": "boolean"
                    }
                  }
                },
                "finance_portal": {
                  "type": "object",
                  "properties": {
                    "driver_stats": {
                      "type": "boolean"
                    },
                    "order": {
                      "type": "boolean"
                    },
                    "statement_html": {
                      "type": "boolean"
                    },
                    "statements": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/tokens": {
      "post": {
        "summary": "Creates new token",
        "tags": [
          "Tokens"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "driver_id": {
                  "type": "integer"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "new session has been created",
            "schema": {
              "type": "object",
              "properties": {
                "token": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/tokens/{token}/exchange": {
      "post": {
        "summary": "Exchanges token for user JWT",
        "tags": [
          "Tokens"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "new session has been created",
            "schema": {
              "type": "object",
              "properties": {
                "access_token": {
                  "type": "string",
                  "example": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpZCI6OSwiZW1haWwiOiJ0ZXN0QGV4YW1wbGUuY29tIiwidXVpZCI6ImI4MDRlNGYzLTYyNjAtNGNmZC04NzEwLWQ2ZTFmOTE4NmU3OSIsImNyZWF0ZWRfYXQiOiIyMDE3LTA2LTAyIDEyOjIxOjE3IFVUQyJ9.k4d1zmfVaWqbHqNSZhQ8WdVAFqX1hTG7byaaj12GWfk",
                  "description": "Created JWT token for the session"
                },
                "user": {
                  "$ref": "#/definitions/user"
                }
              }
            }
          }
        }
      }
    },
    "/users/{id}/activate": {
      "post": {
        "summary": "Activates blocked user",
        "tags": [
          "Users"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "description": "Access token",
            "required": true
          }
        ],
        "responses": {
          "401": {
            "description": "authentication error",
            "schema": {
              "$ref": "#/definitions/errors"
            }
          },
          "200": {
            "description": "user was successfully activated",
            "schema": {
              "$ref": "#/definitions/user"
            }
          }
        }
      }
    },
    "/users/{id}/approval/drop": {
      "post": {
        "summary": "Drop given user approval process",
        "tags": [
          "Users"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "description": "Access token",
            "required": true
          }
        ],
        "responses": {
          "401": {
            "description": "authentication error",
            "schema": {
              "$ref": "#/definitions/errors"
            }
          },
          "200": {
            "description": "user approval droped"
          }
        }
      }
    },
    "/users/{id}/approval/finish": {
      "post": {
        "summary": "Finish given user approval sending him a message",
        "tags": [
          "Users"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "subject": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                }
              }
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "description": "Access token",
            "required": true
          }
        ],
        "responses": {
          "401": {
            "description": "authentication error",
            "schema": {
              "$ref": "#/definitions/errors"
            }
          },
          "200": {
            "description": "successfully finish approval"
          }
        }
      }
    },
    "/users/{user_id}/approval/notification": {
      "get": {
        "summary": "Approval Notification Preview",
        "tags": [
          "Users",
          "Approval",
          "Notification"
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "description": "Access token",
            "required": true
          }
        ],
        "responses": {
          "401": {
            "description": "authentication error",
            "schema": {
              "$ref": "#/definitions/errors"
            }
          },
          "200": {
            "description": "Notification Sent",
            "schema": {
              "type": "object",
              "properties": {
                "subject": {
                  "type": "string"
                },
                "body": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/users/{id}/approval/pick": {
      "post": {
        "summary": "Pick given user for approval",
        "tags": [
          "Users"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "description": "Access token",
            "required": true
          }
        ],
        "responses": {
          "401": {
            "description": "authentication error",
            "schema": {
              "$ref": "#/definitions/errors"
            }
          },
          "200": {
            "description": "user picked for approval successfully",
            "schema": {
              "type": "object",
              "properties": {
                "driver_to_approve_id": {
                  "type": "integer",
                  "description": "Picked user ID"
                }
              }
            }
          }
        }
      }
    },
    "/users/approval/start": {
      "post": {
        "summary": "Pick given user for approval",
        "tags": [
          "Users"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "description": "Access token",
            "required": true
          }
        ],
        "responses": {
          "401": {
            "description": "authentication error",
            "schema": {
              "$ref": "#/definitions/errors"
            }
          },
          "200": {
            "description": "user picked for approval successfully",
            "schema": {
              "type": "object",
              "properties": {
                "driver_to_approve_id": {
                  "type": "integer",
                  "description": "Picked user ID"
                }
              }
            }
          }
        }
      }
    },
    "/users/activate": {
      "post": {
        "summary": "Activate multiple user",
        "tags": [
          "Users"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Body",
            "schema": {
              "type": "object",
              "properties": {
                "user_ids": {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                }
              }
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "description": "Access token",
            "required": true
          }
        ],
        "responses": {
          "401": {
            "description": "authentication error",
            "schema": {
              "$ref": "#/definitions/errors"
            }
          },
          "200": {
            "description": "successfully sent invites to the users",
            "schema": {
              "$ref": "#/definitions/batch_results"
            }
          }
        }
      }
    },
    "/users/deactivate": {
      "post": {
        "summary": "Activate multiple user",
        "tags": [
          "Users"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Body",
            "schema": {
              "type": "object",
              "properties": {
                "user_ids": {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                }
              }
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "description": "Access token",
            "required": true
          }
        ],
        "responses": {
          "401": {
            "description": "authentication error",
            "schema": {
              "$ref": "#/definitions/errors"
            }
          },
          "200": {
            "description": "successfully sent invites to the users",
            "schema": {
              "$ref": "#/definitions/batch_results"
            }
          }
        }
      }
    },
    "/users": {
      "post": {
        "summary": "Register a user",
        "tags": [
          "Users"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "attributes",
            "in": "body",
            "description": "User attributes",
            "schema": {
              "type": "object",
              "required": [
                "attributes"
              ],
              "properties": {
                "attributes": {
                  "type": "object",
                  "properties": {
                    "email": {
                      "type": "string",
                      "example": "m@il.com"
                    },
                    "first_name": {
                      "type": "string",
                      "example": "John"
                    },
                    "last_name": {
                      "type": "string",
                      "example": "Doe"
                    },
                    "phone": {
                      "type": "string",
                      "example": "+41 123 456 789"
                    },
                    "license_number": {
                      "type": "string",
                      "example": "112233"
                    },
                    "how_did_you_hear_about": {
                      "type": "string",
                      "example": "ads"
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "user registred successfully"
          }
        }
      },
      "get": {
        "summary": "Responds with list of back-office users",
        "tags": [
          "Users"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "type": "string"
          },
          {
            "name": "sort_column",
            "in": "query",
            "type": "string",
            "enum": [
              "phone",
              "email",
              "first_name",
              "last_name",
              "gett_id",
              "badge_number",
              "active",
              "address",
              "agent_status"
            ]
          },
          {
            "name": "sort_direction",
            "in": "query",
            "type": "string",
            "enum": [
              "asc",
              "desc"
            ]
          },
          {
            "name": "page",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "per_page",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "description": "Access token",
            "required": true
          }
        ],
        "responses": {
          "401": {
            "description": "authentication error",
            "schema": {
              "$ref": "#/definitions/errors"
            }
          },
          "200": {
            "description": "successfully requested list of users",
            "schema": {
              "type": "object",
              "properties": {
                "users": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/user"
                  }
                },
                "total": {
                  "type": "integer",
                  "example": 11
                },
                "page": {
                  "type": "integer",
                  "example": 1
                },
                "per_page": {
                  "type": "integer",
                  "example": 5
                },
                "last_sync_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2017-12-07 15:22:11 +0000",
                  "x-nullable": true
                },
                "sync_in_progress": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/users/{id}/deactivate": {
      "post": {
        "summary": "Deactivates user",
        "tags": [
          "Users"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "description": "Access token",
            "required": true
          }
        ],
        "responses": {
          "401": {
            "description": "authentication error",
            "schema": {
              "$ref": "#/definitions/errors"
            }
          },
          "200": {
            "description": "user was successfully deactivated",
            "schema": {
              "$ref": "#/definitions/user"
            }
          }
        }
      }
    },
    "/users/{user_id}/documents/{id}/approve": {
      "post": {
        "summary": "Approve given document and save metadata",
        "tags": [
          "Documents"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "metadata",
            "in": "body",
            "description": "Document metadata",
            "schema": {
              "type": "object",
              "properties": {
                "metadata": {
                  "type": "object"
                }
              }
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "description": "Access token",
            "required": true
          }
        ],
        "responses": {
          "401": {
            "description": "authentication error",
            "schema": {
              "$ref": "#/definitions/errors"
            }
          },
          "200": {
            "description": "successfully approve document",
            "schema": {
              "$ref": "#/definitions/document"
            }
          }
        }
      }
    },
    "/users/{user_id}/documents": {
      "get": {
        "summary": "Responds with list of documents for given user",
        "tags": [
          "Documents"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "description": "Access token",
            "required": true
          }
        ],
        "responses": {
          "401": {
            "description": "authentication error",
            "schema": {
              "$ref": "#/definitions/errors"
            }
          },
          "200": {
            "description": "successfully requested list of documents",
            "schema": {
              "type": "object",
              "properties": {
                "documents": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/document"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/{user_id}/documents/kinds": {
      "get": {
        "summary": "Responds with list of document kinds for given user",
        "tags": [
          "Documents"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "description": "Access token",
            "required": true
          }
        ],
        "responses": {
          "401": {
            "description": "authentication error",
            "schema": {
              "$ref": "#/definitions/errors"
            }
          },
          "200": {
            "description": "successfully requested list of document kinds",
            "schema": {
              "type": "object",
              "properties": {
                "kinds": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/documents_kind"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/{user_id}/documents/{id}/reject": {
      "post": {
        "summary": "Reject given document and save metadata",
        "tags": [
          "Documents"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "metadata": {
                  "type": "object"
                },
                "comment": {
                  "type": "string"
                }
              }
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "description": "Access token",
            "required": true
          }
        ],
        "responses": {
          "401": {
            "description": "authentication error",
            "schema": {
              "$ref": "#/definitions/errors"
            }
          },
          "200": {
            "description": "successfully approve document",
            "schema": {
              "$ref": "#/definitions/document"
            }
          }
        }
      }
    },
    "/users/drivers": {
      "get": {
        "summary": "Responds with list of drivers",
        "tags": [
          "Users"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "type": "string"
          },
          {
            "name": "category",
            "in": "query",
            "type": "string",
            "required": false,
            "enum": [
              "badge_number",
              "email",
              "gett_id",
              "license_number",
              "name",
              "phone",
              "vehicle_reg"
            ]
          },
          {
            "name": "role",
            "in": "query",
            "type": "string",
            "required": false
          },
          {
            "name": "sort_column",
            "in": "query",
            "type": "string",
            "enum": [
              "phone",
              "email",
              "first_name",
              "last_name",
              "gett_id",
              "badge_number",
              "active",
              "address",
              "agent_status"
            ]
          },
          {
            "name": "sort_direction",
            "in": "query",
            "type": "string",
            "enum": [
              "asc",
              "desc"
            ]
          },
          {
            "name": "page",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "per_page",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "description": "Access token",
            "required": true
          }
        ],
        "responses": {
          "401": {
            "description": "authentication error",
            "schema": {
              "$ref": "#/definitions/errors"
            }
          },
          "200": {
            "description": "successfully requested list of users",
            "schema": {
              "type": "object",
              "properties": {
                "users": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/user"
                  }
                },
                "total": {
                  "type": "integer",
                  "example": 11
                },
                "page": {
                  "type": "integer",
                  "example": 1
                },
                "per_page": {
                  "type": "integer",
                  "example": 5
                },
                "last_sync_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2017-12-07 15:22:11 +0000",
                  "x-nullable": true
                },
                "sync_in_progress": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/users/{id}/log_in_as": {
      "post": {
        "summary": "Creates new session associated with given user",
        "tags": [
          "Users"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "description": "Access token",
            "required": true
          }
        ],
        "responses": {
          "401": {
            "description": "authentication error",
            "schema": {
              "$ref": "#/definitions/errors"
            }
          },
          "200": {
            "description": "new session has been created",
            "schema": {
              "type": "object",
              "properties": {
                "access_token": {
                  "type": "string",
                  "example": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpZCI6OSwiZW1haWwiOiJ0ZXN0QGV4YW1wbGUuY29tIiwidXVpZCI6ImI4MDRlNGYzLTYyNjAtNGNmZC04NzEwLWQ2ZTFmOTE4NmU3OSIsImNyZWF0ZWRfYXQiOiIyMDE3LTA2LTAyIDEyOjIxOjE3IFVUQyJ9.k4d1zmfVaWqbHqNSZhQ8WdVAFqX1hTG7byaaj12GWfk",
                  "description": "Created JWT token for the session"
                },
                "user": {
                  "$ref": "#/definitions/user"
                }
              }
            }
          }
        }
      }
    },
    "/users/{id}/metrics": {
      "get": {
        "summary": "Responds with metrics for given user",
        "tags": [
          "Users"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "description": "Access token",
            "required": true
          }
        ],
        "responses": {
          "401": {
            "description": "authentication error",
            "schema": {
              "$ref": "#/definitions/errors"
            }
          },
          "200": {
            "description": "successfully requested user metrics",
            "schema": {
              "$ref": "#/definitions/metrics"
            }
          },
          "422": {
            "description": "3rd-party API responds with error",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "was not retrieved"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "summary": "Responds with user data",
        "tags": [
          "Users"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "description": "Access token",
            "required": true
          }
        ],
        "responses": {
          "401": {
            "description": "authentication error",
            "schema": {
              "$ref": "#/definitions/errors"
            }
          },
          "200": {
            "description": "successfully requested user data",
            "schema": {
              "$ref": "#/definitions/user"
            }
          },
          "404": {
            "description": "user not found"
          }
        }
      }
    },
    "/users/{id}/stats": {
      "get": {
        "summary": "Responds with weekly stats for given user",
        "tags": [
          "Users"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "description": "Access token",
            "required": true
          }
        ],
        "responses": {
          "401": {
            "description": "authentication error",
            "schema": {
              "$ref": "#/definitions/errors"
            }
          },
          "200": {
            "description": "successfully requested user stats",
            "schema": {
              "$ref": "#/definitions/week_stats"
            }
          },
          "422": {
            "description": "3rd-party API responds with error",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "was not retrieved"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/sync": {
      "post": {
        "summary": "Sync users with finance portal",
        "tags": [
          "Users"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "description": "Access token",
            "required": true
          }
        ],
        "responses": {
          "401": {
            "description": "authentication error",
            "schema": {
              "$ref": "#/definitions/errors"
            }
          },
          "200": {
            "description": "users were successfully synced"
          }
        }
      }
    },
    "/users/{id}/total_distance": {
      "get": {
        "summary": "Responds with total distance driven by given user since current week",
        "tags": [
          "Users"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "description": "Access token",
            "required": true
          }
        ],
        "responses": {
          "401": {
            "description": "authentication error",
            "schema": {
              "$ref": "#/definitions/errors"
            }
          },
          "200": {
            "description": "successfully requested user stats",
            "schema": {
              "type": "object",
              "properties": {
                "distance": {
                  "type": "number",
                  "format": "float",
                  "example": 1.234
                }
              }
            }
          },
          "422": {
            "description": "3rd-party API responds with error",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "was not retrieved"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/{user_id}/vehicles/{vehicle_id}/documents/{id}/approve": {
      "post": {
        "summary": "Approve given document and save metadata",
        "tags": [
          "Documents"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true
          },
          {
            "name": "vehicle_id",
            "in": "path",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "metadata",
            "in": "body",
            "description": "Document metadata",
            "schema": {
              "type": "object",
              "properties": {
                "metadata": {
                  "type": "object"
                }
              }
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "description": "Access token",
            "required": true
          }
        ],
        "responses": {
          "401": {
            "description": "authentication error",
            "schema": {
              "$ref": "#/definitions/errors"
            }
          },
          "200": {
            "description": "successfully approve document",
            "schema": {
              "$ref": "#/definitions/document"
            }
          }
        }
      }
    },
    "/users/{user_id}/vehicles/{vehicle_id}/documents": {
      "get": {
        "summary": "Responds with list of documents for given vehicle of given user",
        "tags": [
          "Documents"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true
          },
          {
            "name": "vehicle_id",
            "in": "path",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "description": "Access token",
            "required": true
          }
        ],
        "responses": {
          "401": {
            "description": "authentication error",
            "schema": {
              "$ref": "#/definitions/errors"
            }
          },
          "200": {
            "description": "successfully requested list of documents",
            "schema": {
              "type": "object",
              "properties": {
                "documents": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/document"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/{user_id}/vehicles/{vehicle_id}/documents/kinds": {
      "get": {
        "summary": "Responds with list of document kinds for given vehicle of given user",
        "tags": [
          "Documents"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true
          },
          {
            "name": "vehicle_id",
            "in": "path",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "description": "Access token",
            "required": true
          }
        ],
        "responses": {
          "401": {
            "description": "authentication error",
            "schema": {
              "$ref": "#/definitions/errors"
            }
          },
          "200": {
            "description": "successfully requested list of document kinds",
            "schema": {
              "type": "object",
              "properties": {
                "kinds": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/documents_kind"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/{user_id}/vehicles/{vehicle_id}/documents/{id}/reject": {
      "post": {
        "summary": "Reject given document and save metadata",
        "tags": [
          "Documents"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true
          },
          {
            "name": "vehicle_id",
            "in": "path",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "metadata": {
                  "type": "object"
                },
                "comment": {
                  "type": "string"
                }
              }
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "description": "Access token",
            "required": true
          }
        ],
        "responses": {
          "401": {
            "description": "authentication error",
            "schema": {
              "$ref": "#/definitions/errors"
            }
          },
          "200": {
            "description": "successfully approve document",
            "schema": {
              "$ref": "#/definitions/document"
            }
          }
        }
      }
    },
    "/users/{user_id}/vehicles": {
      "get": {
        "summary": "Responds with list of given user vehicles",
        "tags": [
          "Vehicles"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "description": "Access token",
            "required": true
          }
        ],
        "responses": {
          "401": {
            "description": "authentication error",
            "schema": {
              "$ref": "#/definitions/errors"
            }
          },
          "200": {
            "description": "successfully requested list of vehicles",
            "schema": {
              "type": "object",
              "properties": {
                "vehicles": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/vehicle"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/{user_id}/vehicles/{id}": {
      "put": {
        "summary": "Updates current user vehicle",
        "tags": [
          "Vehicles"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "model",
            "in": "formData",
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "description": "Access token",
            "required": true
          }
        ],
        "responses": {
          "401": {
            "description": "authentication error",
            "schema": {
              "$ref": "#/definitions/errors"
            }
          },
          "200": {
            "description": "successfully update vehicle",
            "schema": {
              "$ref": "#/definitions/vehicle"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "agent": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "first_name": {
          "type": "string"
        },
        "last_name": {
          "type": "string"
        },
        "assigned_drivers_count": {
          "type": "integer"
        },
        "agent_status": {
          "type": "string"
        },
        "agent_status_updated_at": {
          "type": "datetime"
        }
      }
    },
    "assignment_driver": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "checkin_at": {
          "type": "string",
          "format": "date-time"
        },
        "completed": {
          "type": "boolean"
        },
        "documents_ready": {
          "type": "boolean"
        },
        "identity_checked_at": {
          "type": "string",
          "format": "date-time"
        },
        "license": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "scheduled_at": {
          "type": "string",
          "format": "date-time"
        },
        "agent": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer"
            },
            "name": {
              "type": "string"
            }
          }
        }
      }
    },
    "batch_results": {
      "type": "object",
      "properties": {
        "succeeded": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/user"
          }
        },
        "failed": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/user"
          }
        },
        "skipped": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/user"
          },
          "x-nullable": true
        }
      }
    },
    "comment": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "content": {
          "type": "string"
        },
        "likes_count": {
          "type": "integer"
        },
        "dislikes_count": {
          "type": "integer"
        },
        "current_user_value": {
          "type": "string",
          "enum": [
            1,
            -1
          ],
          "description": "1 for like, -1 for dislike."
        },
        "created_at": {
          "type": "string",
          "format": "date-time"
        },
        "user": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer"
            },
            "name": {
              "type": "string"
            }
          }
        },
        "comments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/comment"
          }
        }
      }
    },
    "document": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "expiry_date": {
          "type": "string",
          "format": "date"
        },
        "file_url": {
          "type": "string",
          "format": "uri"
        },
        "content_type": {
          "type": "string"
        },
        "file_name": {
          "type": "string"
        },
        "approval_status": {
          "type": "string",
          "enum": [
            "pending",
            "rejected",
            "approved",
            "missing"
          ]
        },
        "expiration_warning": {
          "type": "boolean"
        },
        "kind": {
          "$ref": "#/definitions/documents_kind"
        },
        "last_change": {
          "$ref": "#/definitions/documents_status_change"
        },
        "user": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer"
            },
            "approval_status": {
              "type": "string",
              "enum": [
                "documents_missing",
                "pending",
                "rejected",
                "approved"
              ]
            }
          }
        },
        "agent": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer"
            },
            "name": {
              "type": "string"
            }
          }
        },
        "vehicle": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer"
            },
            "approval_status": {
              "type": "string",
              "enum": [
                "documents_missing",
                "pending",
                "rejected",
                "approved"
              ]
            }
          }
        }
      }
    },
    "documents_field": {
      "type": "object",
      "properties": {
        "label": {
          "type": "string"
        },
        "mandatory": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "str",
            "date",
            "boolean",
            "date_time",
            "color"
          ]
        }
      }
    },
    "documents_kind": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "title": {
          "type": "string"
        },
        "slug": {
          "type": "string"
        },
        "owner": {
          "type": "string"
        },
        "mandatory": {
          "type": "boolean"
        },
        "fields": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/documents_field"
          }
        }
      }
    },
    "documents_status_change": {
      "type": "object",
      "properties": {
        "created_at": {
          "type": "string",
          "format": "date-time"
        },
        "comment": {
          "type": "string"
        },
        "user_name": {
          "type": "string"
        }
      }
    },
    "earning": {
      "type": "object",
      "properties": {
        "external_id": {
          "type": "string",
          "example": "2249477303"
        },
        "order_id": {
          "type": "integer",
          "example": 1234
        },
        "origin": {
          "type": "object",
          "properties": {
            "full_address": {
              "type": "string",
              "example": "216 Richmond Road, London, E8"
            },
            "latitude": {
              "type": "number",
              "example": 51.543267
            },
            "longitude": {
              "type": "number",
              "example": -0.061942
            }
          }
        },
        "destination": {
          "type": "object",
          "properties": {
            "full_address": {
              "type": "string",
              "example": "Overland House, 151-153 Great Portland Street, London, W1W 6QW"
            },
            "latitude": {
              "type": "number",
              "example": 51.520896
            },
            "longitude": {
              "type": "number",
              "example": -0.143318
            }
          }
        },
        "taxi_fare": {
          "type": "float",
          "example": 21.85
        },
        "cancellation_fee": {
          "type": "float",
          "example": 0
        },
        "gratuity": {
          "type": "float",
          "example": 1.2
        },
        "commission": {
          "type": "float",
          "example": -2.62
        },
        "extras": {
          "type": "float",
          "example": 7.23
        },
        "peak_hour_premium": {
          "type": "float",
          "example": 2.0
        },
        "total": {
          "type": "float",
          "example": 31.66
        },
        "vat": {
          "type": "float",
          "example": 0.43
        },
        "journey_time": {
          "type": "integer",
          "example": 3600
        },
        "started_at": {
          "type": "string",
          "format": "date-time",
          "example": "2017-11-15T07:58:18+00:00"
        },
        "issued": {
          "type": "string",
          "format": "date-time",
          "example": "2017-11-15T07:50:01+00:00"
        },
        "status": {
          "type": "string",
          "example": "completed"
        },
        "waiting": {
          "type": "float",
          "example": 2.1
        },
        "transaction_type": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "example": "Ride"
            },
            "slug": {
              "type": "string",
              "example": "bookkeeping_order"
            }
          }
        }
      }
    },
    "errors": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      }
    },
    "invite": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "created_at": {
          "type": "string",
          "format": "date-time"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time"
        },
        "accepted_at": {
          "type": "string",
          "format": "date-time"
        },
        "expires_at": {
          "type": "string",
          "format": "date-time"
        },
        "step": {
          "type": "string"
        }
      }
    },
    "metrics": {
      "type": "object",
      "properties": {
        "rating": {
          "type": "float",
          "example": 4.93
        },
        "today_acceptance": {
          "type": "integer",
          "example": 100,
          "description": "percents"
        },
        "week_acceptance": {
          "type": "integer",
          "example": 75,
          "description": "percents"
        },
        "month_acceptance": {
          "type": "integer",
          "example": 50,
          "description": "percents"
        },
        "total_acceptance": {
          "type": "integer",
          "example": 25,
          "description": "percents"
        }
      }
    },
    "news_image": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "binding_hash": {
          "type": "string"
        },
        "image_url": {
          "type": "string"
        }
      }
    },
    "news_item": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "title": {
          "type": "string"
        },
        "content": {
          "type": "string"
        },
        "published": {
          "type": "boolean"
        },
        "published_at": {
          "type": "string",
          "format": "date-time"
        },
        "item_type": {
          "type": "string",
          "enum": [
            "regular",
            "featured",
            "numbers"
          ]
        },
        "comments_count": {
          "type": "integer"
        },
        "views_count": {
          "type": "integer"
        },
        "number": {
          "type": "integer"
        },
        "image_name": {
          "type": "string"
        },
        "image_url": {
          "type": "string"
        },
        "author": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer"
            },
            "name": {
              "type": "string"
            }
          }
        }
      }
    },
    "order": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "example": 14347135
        },
        "origin": {
          "type": "object",
          "properties": {
            "full_address": {
              "type": "string",
              "example": "216 Richmond Road, London, E8"
            },
            "latitude": {
              "type": "number",
              "example": 51.543267
            },
            "longitude": {
              "type": "number",
              "example": -0.061942
            }
          }
        },
        "destination": {
          "type": "object",
          "properties": {
            "full_address": {
              "type": "string",
              "example": "Overland House, 151-153 Great Portland Street, London, W1W 6QW"
            },
            "latitude": {
              "type": "number",
              "example": 51.520896
            },
            "longitude": {
              "type": "number",
              "example": -0.143318
            }
          }
        },
        "dropoff": {
          "type": "object",
          "properties": {
            "full_address": {
              "type": "string",
              "example": "153 Great Portland Street, London, W1W 6QW"
            },
            "latitude": {
              "type": "number",
              "example": 51.520912
            },
            "longitude": {
              "type": "number",
              "example": -0.143296
            }
          }
        },
        "events": {
          "type": "object",
          "properties": {
            "scheduled_at": {
              "type": "string",
              "format": "date-time",
              "example": "2017-11-15T07:50:01+00:00"
            },
            "arrived_at": {
              "type": "string",
              "format": "date-time",
              "example": "2017-11-15T07:52:18+00:00"
            },
            "started_at": {
              "type": "string",
              "format": "date-time",
              "example": "2017-11-15T07:58:18+00:00"
            },
            "ended_at": {
              "type": "string",
              "format": "date-time",
              "example": "2017-11-15T08:43:02+00:00"
            },
            "cancelled_at": {
              "type": "string",
              "format": "date-time",
              "example": "2017-11-15T08:45:02+00:00"
            }
          }
        },
        "distance": {
          "type": "number",
          "example": 6.4251,
          "description": "Miles"
        },
        "path": {
          "type": "array",
          "description": "Array with points coordinates",
          "items": {
            "type": "object",
            "properties": {
              "lat": {
                "type": "number"
              },
              "lng": {
                "type": "number"
              }
            }
          },
          "example": [
            {
              "lat": 51.543362875193,
              "lng": -0.062043146973017
            },
            {
              "lat": 51.543373510907,
              "lng": -0.062232141158385
            }
          ]
        }
      }
    },
    "review": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "attempt_number": {
          "type": "integer"
        },
        "completed": {
          "type": "boolean"
        },
        "created_at": {
          "type": "string",
          "format": "date-time"
        },
        "driver": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer"
            },
            "first_name": {
              "type": "string"
            },
            "last_name": {
              "type": "string"
            }
          }
        },
        "review_updates": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/review_update"
          }
        },
        "gett_phone": {
          "type": "string"
        },
        "compliance_verified": {
          "type": "boolean"
        }
      }
    },
    "review_update": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "created_at": {
          "type": "string",
          "format": "date-time"
        },
        "comment": {
          "type": "string"
        },
        "completed": {
          "type": "boolean"
        },
        "current": {
          "type": "boolean"
        },
        "requirement": {
          "type": "string",
          "enum": [
            "base",
            "language",
            "training",
            "attitude_competence",
            "vehicle",
            "phone_contract"
          ]
        },
        "review_id": {
          "type": "integer"
        },
        "reviewer": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer"
            },
            "first_name": {
              "type": "string"
            },
            "last_name": {
              "type": "string"
            }
          }
        }
      }
    },
    "statement": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "example": 3016373
        },
        "week_number": {
          "type": "integer",
          "example": 44
        },
        "from": {
          "type": "string",
          "format": "date-time",
          "example": "2017-10-30T00:00:00+03:00"
        },
        "to": {
          "type": "string",
          "format": "date-time",
          "example": "2017-11-05T23:59:59+03:00"
        },
        "rides": {
          "type": "float",
          "example": 390.31
        },
        "tips": {
          "type": "float",
          "example": 15.54
        },
        "adjustments": {
          "type": "float",
          "example": 15.5
        },
        "vat": {
          "type": "float",
          "example": 7.2
        },
        "total": {
          "type": "float",
          "example": 373.07
        },
        "cash": {
          "type": "float",
          "example": 7
        },
        "earnings": {
          "type": "float",
          "example": 380.07
        },
        "fees": {
          "type": "float",
          "example": 43.28
        },
        "commission": {
          "type": "float",
          "example": 36.08
        }
      }
    },
    "user": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "created_at": {
          "type": "string",
          "format": "date-time"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time"
        },
        "account_number": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "active": {
          "type": "boolean"
        },
        "avatar_filename": {
          "type": "string"
        },
        "avatar_url": {
          "type": "string"
        },
        "badge_number": {
          "type": "string"
        },
        "badge_type": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "first_name": {
          "type": "string"
        },
        "gett_id": {
          "type": "integer"
        },
        "is_frozen": {
          "type": "boolean"
        },
        "last_activity_at": {
          "type": "string",
          "format": "date-time"
        },
        "last_name": {
          "type": "string"
        },
        "license_number": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "postcode": {
          "type": "string"
        },
        "sort_code": {
          "type": "string"
        },
        "hobbies": {
          "type": "string"
        },
        "talking_topics": {
          "type": "string"
        },
        "driving_cab_since": {
          "type": "string",
          "format": "date"
        },
        "disability_type": {
          "type": "string"
        },
        "disability_description": {
          "type": "string"
        },
        "vehicle_colour": {
          "type": "string"
        },
        "birth_date": {
          "type": "string",
          "format": "date"
        },
        "approval_status": {
          "type": "string",
          "enum": [
            "documents_missing",
            "pending",
            "rejected",
            "approved"
          ]
        },
        "roles": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "example": [
            "driver",
            "site_admin"
          ]
        },
        "permissions": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "example": [
            "news_view",
            "news_edit"
          ]
        },
        "onboarding_step": {
          "type": "integer"
        },
        "onboarding_failed_at": {
          "type": "datetime"
        },
        "how_did_you_hear_about": {
          "type": "string"
        },
        "min_rides_number": {
          "type": "integer"
        },
        "other_rating": {
          "type": "float"
        },
        "vehicle_reg_year": {
          "type": "integer"
        },
        "insurance_number": {
          "type": "string"
        },
        "insurance_number_agreement": {
          "type": "boolean"
        },
        "documents_agreement": {
          "type": "boolean"
        },
        "appointment_scheduled": {
          "type": "boolean"
        },
        "documents_uploaded": {
          "type": "boolean"
        },
        "onboarding_completed": {
          "type": "boolean"
        },
        "documents_expiration_warning": {
          "type": "boolean"
        },
        "invite": {
          "$ref": "#/definitions/invite"
        },
        "vehicles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/invite"
          }
        },
        "reviewer": {
          "type": "object",
          "properties": {
            "first_name": {
              "type": "string"
            },
            "last_name": {
              "type": "string"
            }
          }
        },
        "pending_documents_number": {
          "type": "integer"
        },
        "compliance_queue_position": {
          "type": "integer"
        }
      }
    },
    "vehicle": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "user_id": {
          "type": "integer"
        },
        "title": {
          "type": "string"
        },
        "model": {
          "type": "string"
        },
        "color": {
          "type": "string"
        },
        "plate_number": {
          "type": "string"
        },
        "is_current": {
          "type": "boolean"
        },
        "approval_status": {
          "type": "string",
          "enum": [
            "documents_missing",
            "pending",
            "rejected",
            "approved"
          ]
        },
        "documents": {
          "type": "object",
          "properties": {
            "required": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/document"
              }
            },
            "optional": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/document"
              }
            }
          }
        }
      }
    },
    "week_stats": {
      "type": "object",
      "properties": {
        "completed_orders": {
          "type": "integer",
          "example": 1
        },
        "cancelled_orders": {
          "type": "integer",
          "example": 2
        },
        "cash_fare": {
          "type": "float",
          "example": 3.3
        },
        "card_fare": {
          "type": "float",
          "example": 4.4
        },
        "account_fare": {
          "type": "float",
          "example": 5.5
        },
        "tips": {
          "type": "float",
          "example": 6.6
        }
      }
    }
  }
}