# Monit configuration for Sidekiq: <%= fetch(:application) %>

<% # NOTE: if you edit this template or value of any config variable used here -%>
<% # don't forget to update servers by command: cap [env] sidekiq:monit:config -%>

<% processes_pids.each_with_index do |pid_file, idx| %>
check process <%= sidekiq_service_name(idx) %>
  with pidfile "<%= pid_file %>"
  start program = "/bin/su - <%= sidekiq_user(@role) %> -c 'cd <%= current_path %> && <%= SSHKit.config.command_map[:sidekiq] %> <%= sidekiq_config %> --index <%= idx %> --pidfile <%= pid_file %> --environment <%= fetch(:sidekiq_env) %> <%= sidekiq_concurrency %> <%= sidekiq_logfile %> <%= sidekiq_require %> <%= fetch(:sidekiq_options) %> <%= sidekiq_options_per_process[idx] %> -d'" with timeout 30 seconds
  stop program = "/bin/su - <%= sidekiq_user(@role) %> -c 'cd <%= current_path %> && <%= SSHKit.config.command_map[:sidekiqctl] %> stop <%= pid_file %>'" with timeout <%= fetch(:sidekiq_timeout).to_i + 10  %> seconds
  if totalmem is greater than <%= fetch(:sidekiq_memory_limit) %> for 2 cycles then restart
  group <%= fetch(:sidekiq_monit_group, fetch(:application)) %>-sidekiq
<% end %>
